(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const c of r)if(c.type==="childList")for(const a of c.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function n(r){const c={};return r.integrity&&(c.integrity=r.integrity),r.referrerPolicy&&(c.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?c.credentials="include":r.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function o(r){if(r.ep)return;r.ep=!0;const c=n(r);fetch(r.href,c)}})();let s;function g(e){const t=s.__externref_table_alloc();return s.__wbindgen_export_2.set(t,e),t}function x(e,t){try{return e.apply(this,t)}catch(n){const o=g(n);s.__wbindgen_exn_store(o)}}function m(e){return e==null}const B=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&B.decode();let w=null;function p(){return(w===null||w.byteLength===0)&&(w=new Uint8Array(s.memory.buffer)),w}function b(e,t){return e=e>>>0,B.decode(p().subarray(e,e+t))}function h(e,t){return s.add(e,t)}function I(e,t){return s.multiply(e,t)}let _=0;const E=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},M=typeof E.encodeInto=="function"?function(e,t){return E.encodeInto(e,t)}:function(e,t){const n=E.encode(e);return t.set(n),{read:e.length,written:n.length}};function y(e,t,n){if(n===void 0){const d=E.encode(e),l=t(d.length,1)>>>0;return p().subarray(l,l+d.length).set(d),_=d.length,l}let o=e.length,r=t(o,1)>>>0;const c=p();let a=0;for(;a<o;a++){const d=e.charCodeAt(a);if(d>127)break;c[r+a]=d}if(a!==o){a!==0&&(e=e.slice(a)),r=n(r,o,o=a+e.length*3,1)>>>0;const d=p().subarray(r+a,r+o),l=M(e,d);a+=l.written,r=n(r,o,a,1)>>>0}return _=a,r}function W(e){let t,n;try{const o=y(e,s.__wbindgen_malloc,s.__wbindgen_realloc),r=_,c=s.reverse_string(o,r);return t=c[0],n=c[1],b(c[0],c[1])}finally{s.__wbindgen_free(t,n,1)}}function A(e){const t=y(e,s.__wbindgen_malloc,s.__wbindgen_realloc),n=_;return s.count_words(t,n)>>>0}function N(e){return s.fibonacci(e)>>>0}function R(e){return s.prime_count(e)>>>0}function F(e,t){const n=y(e,s.__wbindgen_malloc,s.__wbindgen_realloc),o=_,r=y(t,s.__wbindgen_malloc,s.__wbindgen_realloc),c=_;return s.set_text_content_safe(n,o,r,c)!==0}function $(e){const t=y(e,s.__wbindgen_malloc,s.__wbindgen_realloc),n=_;return s.element_exists(t,n)!==0}async function O(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(o){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",o);else throw o}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}else{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function S(){const e={};return e.wbg={},e.wbg.__wbg_call_672a4d21634d4a24=function(){return x(function(t,n){return t.call(n)},arguments)},e.wbg.__wbg_document_d249400bd7bd996d=function(t){const n=t.document;return m(n)?0:g(n)},e.wbg.__wbg_getElementById_f827f0d6648718a8=function(t,n,o){const r=t.getElementById(b(n,o));return m(r)?0:g(r)},e.wbg.__wbg_instanceof_Window_def73ea0955fc569=function(t){let n;try{n=t instanceof Window}catch{n=!1}return n},e.wbg.__wbg_log_29e54da1278f01d0=function(t,n){console.log(b(t,n))},e.wbg.__wbg_newnoargs_105ed471475aaf50=function(t,n){return new Function(b(t,n))},e.wbg.__wbg_settextContent_d29397f7b994d314=function(t,n,o){t.textContent=n===0?void 0:b(n,o)},e.wbg.__wbg_static_accessor_GLOBAL_88a902d13a557d07=function(){const t=typeof global>"u"?null:global;return m(t)?0:g(t)},e.wbg.__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0=function(){const t=typeof globalThis>"u"?null:globalThis;return m(t)?0:g(t)},e.wbg.__wbg_static_accessor_SELF_37c5d418e4bf5819=function(){const t=typeof self>"u"?null:self;return m(t)?0:g(t)},e.wbg.__wbg_static_accessor_WINDOW_5de37043a91a9c40=function(){const t=typeof window>"u"?null:window;return m(t)?0:g(t)},e.wbg.__wbindgen_init_externref_table=function(){const t=s.__wbindgen_export_2,n=t.grow(4);t.set(0,void 0),t.set(n+0,void 0),t.set(n+1,null),t.set(n+2,!0),t.set(n+3,!1)},e.wbg.__wbindgen_is_undefined=function(t){return t===void 0},e.wbg.__wbindgen_throw=function(t,n){throw new Error(b(t,n))},e}function C(e,t){return s=e.exports,L.__wbindgen_wasm_module=t,w=null,s.__wbindgen_start(),s}async function L(e){if(s!==void 0)return s;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof e>"u"&&(e=new URL("/rust-wasm-typescript-starter/assets/rust_wasm_bg-CQBK0tn-.wasm",import.meta.url));const t=S();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:o}=await O(await e,t);return C(n,o)}async function H(){try{await L(),console.log("ðŸ¦€ Rust/WebAssembly module loaded successfully!"),P()}catch(e){console.error("Failed to load WASM module:",e)}}function P(){const e=document.getElementById("add-btn"),t=document.getElementById("multiply-btn"),n=document.getElementById("math-result");e.addEventListener("click",()=>{const i=parseFloat(document.getElementById("num1").value),u=parseFloat(document.getElementById("num2").value);if(!isNaN(i)&&!isNaN(u)){const f=h(Math.floor(i),Math.floor(u));n.innerHTML=`<strong>Addition Result:</strong> ${i} + ${u} = ${f}`}else n.innerHTML="<strong>Error:</strong> Please enter valid numbers"}),t.addEventListener("click",()=>{const i=parseFloat(document.getElementById("num1").value),u=parseFloat(document.getElementById("num2").value);if(!isNaN(i)&&!isNaN(u)){const f=I(i,u);n.innerHTML=`<strong>Multiplication Result:</strong> ${i} Ã— ${u} = ${f}`}else n.innerHTML="<strong>Error:</strong> Please enter valid numbers"});const o=document.getElementById("reverse-btn"),r=document.getElementById("count-words-btn"),c=document.getElementById("string-result");o.addEventListener("click",()=>{const i=document.getElementById("text-input").value,u=W(i);c.innerHTML=`<strong>Reversed:</strong> "${i}" â†’ "${u}"`}),r.addEventListener("click",()=>{const i=document.getElementById("text-input").value,u=A(i);c.innerHTML=`<strong>Word Count:</strong> "${i}" contains ${u} word(s)`});const a=document.getElementById("fib-btn"),d=document.getElementById("prime-btn"),l=document.getElementById("performance-result");a.addEventListener("click",()=>{const i=parseInt(document.getElementById("fib-input").value);if(!isNaN(i)&&i>=0){const u=performance.now(),f=N(i),v=(performance.now()-u).toFixed(2);l.innerHTML=`
        <strong>Fibonacci Result:</strong> fibonacci(${i}) = ${f}<br>
        <span class="performance-info">Computed in ${v}ms by Rust/WASM</span>
      `}else l.innerHTML="<strong>Error:</strong> Please enter a valid non-negative number"}),d.addEventListener("click",()=>{const i=parseInt(document.getElementById("prime-input").value);if(!isNaN(i)&&i>=0){const u=performance.now(),f=R(i),v=(performance.now()-u).toFixed(2);l.innerHTML=`
        <strong>Prime Count:</strong> Found ${f} prime(s) up to ${i}<br>
        <span class="performance-info">Computed in ${v}ms by Rust/WASM</span>
      `}else l.innerHTML="<strong>Error:</strong> Please enter a valid non-negative number"}),document.getElementById("dom-btn").addEventListener("click",()=>{const i=document.getElementById("dom-text").value;$("rust-target")?F("rust-target",i)||console.error("Failed to update element content"):console.error('Target element "rust-target" not found')})}H();
